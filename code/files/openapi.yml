openapi: 3.0.0
info:
  title: Cook4You API
  version: 1.1.0

paths:
  /register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthData'
      responses:
        200:
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        409:
          description: Пользователь с таким email уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Email уже существует"
        500:
          description: Ошибка создания пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /login:
    post:
      summary: Аутентификация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthData'
      responses:
        200:
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неверный email или пароль
        500:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /chats:
    get:
      summary: Получить список чатов пользователя
      security:
        - bearerAuth: []
      responses:
        200:
          description: Список чатов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        500:
          description: Ошибка получения чатов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Удалить все чаты пользователя
      security:
        - bearerAuth: []
      responses:
        200:
          description: Список чатов удалён
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        500:
          description: Ошибка удаления чатов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /chat:
    post:
      summary: Создать новый чат
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        200:
          description: Чат создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        500:
          description: Ошибка создания чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /chat/{chat_id}:
    get:
      summary: Получить чат по ID
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Чат получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        404:
          description: Чат не найден
        500:
          description: Ошибка получения чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      summary: Удалить чат по ID
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Успешное удаление
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        404:
          description: Чат не найден
        500:
          description: Ошибка удаления чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /chat/{chat_id}/add-message:
    post:
      summary: Добавить сообщение в чат по ID
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageData'
      responses:
        200:
          description: Сообщение добавлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        404:
          description: Чат не найден
        500:
          description: Ошибка добавления сообщения в чат
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /chat/{chat_id}/model-answer-text:
    get:
      summary: Получить текстовый ответ модели по контексту чата
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ответ модели получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        404:
          description: Чат не найден
        500:
          description: Ошибка получения ответа модели
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /chat/{chat_id}/model-answer-image:
    get:
      summary: Получить ссылку на сгенерированное изображение по контексту чата
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ссылка на изображение получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageData'
        400:
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        401:
          description: Неавторизован
        404:
          description: Чат не найден
        500:
          description: Ошибка получения ссылки на изображение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    InternalServerError:
      type: object
      properties:
        detail:
          type: string
          description: Внутренняя ошибка

    BadRequestError:
      type: object
      properties:
        detail:
          type: string
          description: Ошибка запроса

    AuthData:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT токен для аутентификации
    
    MessageData:
      type: object
      required:
        - content
      properties:
        role:
          type: string
          enum: [user, assistant]
        type:
          type: string
          enum: [text, image]
        content:
          type: string
        created_at:
          type: string
          format: date-time
    
    ChatData:
      type: object
      required:
        - chat_id
        - title
        - created_at
        - updated_at
        - messages
      properties:
        chat_id:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageData'